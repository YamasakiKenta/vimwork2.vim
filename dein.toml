[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
    let g:user_emmet_settings = {
                \ 'variables': {
                \ 'lang' : 'ja'
                \ }
                \ }
    imap <expr><TAB>
                \ emmet#isExpandable()? emmet#expandAbbrIntelligent("\<tab>")
                \ :"\<TAB>"
'''
[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
    let g:neosnippet#snippets_directory = expand('~/.cache/plugin/vimwork2.vim/snippets')
    imap <C-Space> <PLUG>(neosnippet_expand_or_jump)
'''
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_source = 'neosnippet.vim'
[[plugins]]
repo = 'tpope/vim-fugitive'
[[plugins]]
repo = 'cespare/vim-toml'
[[plugins]]
repo = 'thinca/vim-qfreplace'
[[plugins]]
repo = 'fuenor/qfixgrep'
hook_add = '''
    let QFixWin_EnableMode = 1
    let g:QFixWin_QuickFixTitleReg = '\cQuickfix'
    let g:QFixWin_LocationListTitleReg = '\cLocation'
'''
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
    let g:quickrun_config = {
        \ 'cs' : {
            \ 'hook/output_encode/enable' : 1,
            \ 'hook/output_encode/encoding' : 'sjis',
        \ },
        \ 'cpp' : {
            \ 'hook/output_encode/enable' : 1,
            \ 'hook/output_encode/encoding' : 'sjis',
            \ 'type': 'c/gcc',
        \ },
        \ 'c' : {
            \ 'hook/output_encode/enable' : 1,
            \ 'hook/output_encode/encoding' : 'sjis',
            \ 'type': 'c/gcc',
        \ },
        \ 'java' : {
            \ 'hook/output_encode/enable' : 1,
            \ 'hook/output_encode/encoding' : 'sjis',
        \ },
        \ 'php' : {
            \ 'hook/output_encode/enable' : 1,
            \ 'hook/output_encode/encoding' : 'utf-8',
        \ },
        \ '_' : {
            \ 'hook/time/enable' : 1,
            \ 'hook/output_encode/enable' : 1,
            \ 'hook/output_encode/encoding' : 'sjis',
            \ 'debug': 'x',
        \ },
        \ 'vb' : {
            \ 'command': 'cscript',
            \ 'cmdopt': '//Nologo',
            \ 'tempfile': '{tempname()}.vbs',
        \ }
    \ }
'''
[[plugins]]
repo = 'vim-scripts/Align'
hook_add = '''
    let g:Align_xstrlen = 3
'''
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
    nmap <leader>d [denite]
    nnoremap [denite] :<c-u>Denite
    nnoremap [denite]b :<c-u>Denite buffer
    nnoremap [denite]m :<c-u>Denite file_mru
    nnoremap [denite]f :<c-u>Denite file_rec
    nnoremap [denite]g :<c-u>Denite file_rec/git
    call denite#custom#var('file_rec', 'command',
                \ ['pt', '--follow', '--nocolor', '--nogroup', '-g:', ''])
    call denite#custom#var('file_rec/git', 'command',
                \ ['git', 'ls-files', '-co', '--exclude-standard'])
    call denite#custom#alias('source', 'file_rec/git', 'file_rec')
    call denite#custom#map('insert', '<Up>', '<denite:move_to_previous_line>', 'noremap')
    call denite#custom#map('insert', '<Down>', '<denite:move_to_next_line>', 'noremap')
'''
[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = 'denite.nvim'
[[plugins]]
repo = 'cocopon/vaffle.vim'
